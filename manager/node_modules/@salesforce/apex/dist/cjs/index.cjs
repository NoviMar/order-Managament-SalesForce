"use strict";
var __defProp = Object.defineProperty;
var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
var __getOwnPropNames = Object.getOwnPropertyNames;
var __hasOwnProp = Object.prototype.hasOwnProperty;
var __export = (target, all) => {
  for (var name in all)
    __defProp(target, name, { get: all[name], enumerable: true });
};
var __copyProps = (to, from, except, desc) => {
  if (from && typeof from === "object" || typeof from === "function") {
    for (let key of __getOwnPropNames(from))
      if (!__hasOwnProp.call(to, key) && key !== except)
        __defProp(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable });
  }
  return to;
};
var __toCommonJS = (mod) => __copyProps(__defProp({}, "__esModule", { value: true }), mod);

// packages/apex/src/index.ts
var src_exports = {};
__export(src_exports, {
  default: () => apexResolver
});
module.exports = __toCommonJS(src_exports);
var apexServices = {
  refreshApex: () => {
    return Promise.reject("not implemented");
  },
  getSObjectValue: () => {
    throw new Error("not implemented");
  }
};
var PREFIX_BARE = "@salesforce/apex";
var PREFIX = "@salesforce/apex/";
var PREFIX_LENGTH = PREFIX.length;
function apexResolver(resource) {
  if (resource === PREFIX_BARE) {
    return apexServices;
  }
  if (!resource.startsWith(PREFIX) || resource.length <= PREFIX_LENGTH) {
    return void 0;
  }
  resource = resource.substring(PREFIX_LENGTH);
  const parts = resource.split(".");
  const method = parts.pop();
  const classname = parts.pop();
  const namespace = parts.pop() || "";
  return () => {
    return Promise.reject(`not implemented: ${namespace}.${classname}.${method}`);
  };
}
